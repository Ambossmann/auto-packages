<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://docs.chocolatey.org/en-us/create/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://community.chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>pixelorama</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>0.11.3</version>
    <packageSourceUrl>https://github.com/Ambossmann/auto-packages/tree/delivery/choco/pixelorama</packageSourceUrl>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>Amboss_Mann</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>Pixelorama</title>
    <authors>Orama Interactive and contributors</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://orama-interactive.itch.io/pixelorama</projectUrl>
    <!-- There are a number of CDN Services that can be used for hosting the Icon for a package. More information can be found here: https://docs.chocolatey.org/en-us/create/create-packages#package-icon-guidelines -->
    <!-- Here is an example using Githack -->
    <iconUrl>https://rawcdn.githack.com/Ambossmann/auto-packages/842af509a11be2f48d24db5d280e1ff67b39537e/icons/pixelorama.png</iconUrl>
    <licenseUrl>https://github.com/Orama-Interactive/Pixelorama/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/Orama-Interactive/Pixelorama</projectSourceUrl>
    <docsUrl>https://www.oramainteractive.com/Pixelorama-Docs/</docsUrl>
    <bugTrackerUrl>https://github.com/Orama-Interactive/Pixelorama/issues</bugTrackerUrl>
    <tags>pixelorama</tags>
    <summary>A free and open-source 2D sprite editor, made with the Godot Engine!</summary>
    <description>
Pixelorama is a free and open source pixel art editor, proudly created with the Godot Engine, by Orama Interactive. Whether you want to make animated pixel art, game graphics, tiles and any kind of pixel art you want, Pixelorama has you covered with its variety of tools and features. Free to use for everyone, forever!

## Current features:

- A variety of different tools to help you draw, with the ability to map a different tool in each left and right mouse buttons.
- Are you an animator? Pixelorama has its own animation timeline just for you! You can work at an individual cel level, where each cel refers to a unique layer and frame. Supports onion skinning, cel linking, motion drawing and frame grouping with tags.
- Custom brushes, including random brushes.
- Create or import custom palettes.
- Import images and edit them inside Pixelorama. If you import multiple files, they will be added as individual animation frames. Importing spritesheets is also supported.
- Export your gorgeous art as `PNG`, as a single file, a spritesheet or multiple files, or `GIF` file.
- Pixel perfect mode for perfect lines, for the pencil, eraser and lighten/darken tools.
- Autosave support, with data recovery in case of a software crash.
- Horizontal and vertical mirrored drawing.
- Tile Mode for pattern creation.
- Rectangular and isometric grid types.
- Scale, rotate and apply multiple image effects to your drawings.
- Multi-language localization support! See our [Crowdin page](https://crowdin.com/project/pixelorama) for more details.
    </description>
    <releaseNotes>https://github.com/Orama-Interactive/Pixelorama/blob/master/CHANGELOG.md</releaseNotes>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
